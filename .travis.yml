# RRN: Copied from template here: https://github.com/hvr/multi-ghc-travis/blob/master/README.md#ghc-head-snapshots

# NB: don't set `language: haskell` here

# The following enables several GHC versions to be tested; often it's
# enough to test only against the last release in a major GHC
# version. Feel free to omit lines listings versions you don't
# need/want testing for.
env:
 - CABALVER=1.18 GHCVER=7.6.1
 - CABALVER=1.18 GHCVER=7.6.2
 - CABALVER=1.18 GHCVER=7.6.3
 - CABALVER=1.18 GHCVER=7.8.2
 - CABALVER=1.18 GHCVER=7.8.3
 - CABALVER=1.18 GHCVER=7.8.4
 - CABALVER=1.22 GHCVER=7.10.1
 - CABALVER=1.22 GHCVER=7.10.2
 - CABALVER=head GHCVER=head

matrix:
  allow_failures:
    - env: CABALVER=head GHCVER=head

 # Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - which -a ghc
 - ghc --version
 - travis_retry cabal update
# This is a hack to make Travis happy because it doesn't install happy/alex by default
 - cabal install -j happy alex
# And now we install the main packages:
 - PKGS="./atomic-primops ./atomic-primops-foreign ./abstract-deque/ ./abstract-deque-tests/ ./lockfree-queue/ ./chaselev-deque/ ./mega-deque"
 - cabal install -j $PKGS
# Now enable benchmarks and tests and add the extra dependencies:
 - cabal install -j --only-dependencies --enable-tests --enable-benchmarks $PKGS

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - (cd ./atomic-primops/testing; cabal test --show-details=always)
 - (cd ./atomic-primops-foreign; cabal configure; cabal test --show-details=always)
 - (cd ./abstract-deque;         cabal configure; cabal test --show-details=always)
 - (cd ./lockfree-queue//;       cabal configure; cabal test --show-details=always)
 - (cd ./chaselev-deque/;        cabal configure; cabal test --show-details=always)
 - (cd ./mega-deque/;            cabal configure; cabal test --show-details=always)
